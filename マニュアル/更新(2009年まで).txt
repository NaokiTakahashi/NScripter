■0.txt 00.txt nscript.datがなくて、system.luaだけがあるとき、system.luaだけで起動するようになりました。
　;mode800等の設定は、一行目に--mode800 などのようにして行います（動作は0.txtの時と同じ）

■NSLuaに直接描画系の命令が追加されました。

■bexecがマウスの真ん中ボタンを押したときにMCLICKを返すようになりました。
　デフォルトではbexecはカーソルキーとスペース／リターンをボタン間の移動とボタンの決定に使うようになりました。
　カーソルキー入力を得たい場合はbclearとbexecの間にbcursor命令を入れてください。
　bclear命令とbexec命令の間にbtrans命令を入れると、ボタン画像の透過部分には反応しなくなりました。
　bclear命令とbexec命令の間にbdown命令を入れると、左クリックを押し下げたときに処理が戻るようになりました。
　従来のbtnwait命令に、getmclick命令を作りました。getfunction等と同じくbtndefとbtnwaitの間で使ってください。-70を返します。

■autosaveoff,savepoint命令追加
表示文頭以外の自動のセーブポイント更新を停止します。
*define節で
autosaveoff
とすることで、saveon/saveoff命令は無視されるようになります。
（表示文頭ではセーブポイントは従来通り更新されます）。
表示文頭以外でセーブさせたい場合（たとえばクリッカブルマップなど）では、手書きでsavepoint命令を呼び出してください。タイミングによってはデータがうまく復帰できなかったりするので、画面全体を読み込んで描画する直前をセーブポイントにするとか、うまく工夫してください。

(nslua.dll関係)
■Luaからセーブポイントを更新する関数NSSavePoint()を作った。
NSExec("savepoint")は駄目です。NSSavePoint()という専用の関数を使ってください

■新しいボタン命令を追加しました。
　今までのボタン機能を統合してシンプルにまとめなおしたものです。
　なるべくこれを使う方向で進めて行こうと思います。

【bclear】
ボタン定義をクリアする。
例）
bclear

【bsp】
スプライトをボタンとして設定する。
パラメータを省略すると、マウスを重ねたときにセル１、マウスをはずしたときにセル０、マウスをクリックしたときにセル２（セルがみっつ以上ある場合のみ）になる。
パラメータを三つ指定できる。それぞれexbtnやspstrに指定するのと同じ文字列で、順に「マウスが重なっていないときの処理」「マウスが重なっているときの処理」「マウスを押したときの処理」になる。
文字列には""を指定できるので、何もしないときには""にすること。

例）
bsp 1 ;スプライト１番をボタンにする
bsp 2,"P3,0","P3,1","P4,1" ;スプライト２番をボタンにする。それぞれ重なっていないとき、重なったとき、押したときの処理を記述している。

【bdef】
どのスプライトとも重なっていないときの処理を指定する。これもexbtnやspstrに指定するのと同じ文字列
例）
bdef "C0" ;どれとも重なっていない場合はスプライト０番を非表示にする。

【btime】
ボタン処理を開始してからタイムアウトする時間を指定する。
時間の後で,1とすると、時間が経過していてもボイス（dwaveチャンネル０）が再生し終わるまで待つ。これはオートモード等に使う。
例）
btime 2000 ;２秒後にタイムアウトする。
btime 1000,1 ;１秒後にタイムアウトする。１秒を過ぎてもボイスが終了していなければ待つ。

【bexec】
ボタン処理を実行する。引数は文字列変数と数値変数、もしくはその両方が選べる。

bclearを実行するまで設定は残っている。
btimeを実行するまでは経過時間とタイムアウト時間の設定も残っている。

例）
bexec $0 ;文字列に結果を受け取る
bexec $0,%0 ;文字列と数値変数に結果を受け取る。

文字列変数に戻る値：
どのスプライトでもないところが左クリックされた場合……"LCLICK"が返ります。
スプライトが左クリック場合……"S(スプライト番号)"が返ります。たとえばスプライト１２番なら"S12"が返ります。
タイムアウトした場合……"TIMEOUT"が返ります。
右クリックされた場合……"RCLICK"が返ります。
ホイールアップ／ダウンされた場合……"WHEELUP" "WHEELDOWN"が返ります。
キーが押された場合……それぞれに対応した文字列が返ります。英字は大文字で返ります。
　・英字１文字、数字はそのまま返ります。
　・"SPACE"　スペースキー
　・"RETURN"　リターンキー
　・"CTRL"　コントロールキー
　・"UP" "DOWN" "LEFT" "RIGHT" カーソルキー上下左右
　・"F1"〜"F12" ファンクションキー
　・"PAGEUP" "PAGEDOWN" ページアップ、ダウンキー
　・"SHIFT" シフトキー

数値変数に戻る値：
スプライトが押されたときにそのスプライト番号を得る。それ以外の場合は-1が返る。

どの値が入力されても戻るので、必要のない値を受け取った場合はbexecに処理を戻してループすること。




■mousemode 0 でマウスカーソルを消し、mousemode 1 でマウスカーソルをつけられるようになりました。
昔作って、うまく動かなかったため使用しないことを推奨していたmousecursorも、多分これで大丈夫だと思います。

■グラフィックファイルのセルアニメーション指定で、今まではアニメしないものは、たとえば２セルなら
:c/2,0,3;としなければならなかったところを、:c/2;で出来るようにしました。（従来の方法も可能です）

■if文で従来の&だけでなく|（OR演算)も使えるようになりました。
この記号は、SHIFT+\で出るキーボードが多いと思います。
例）if %0=1 | %0=2 goto *label ;%0=1もしくは%0=2で処理実行
ただし、現段階では&と|は混在できません。すみません。


■グラフィックファイル指定のときに、ファイル名の変わりに、
>幅,高さ,#色
とすることで、その幅、高さ、色で塗りつぶされた長方形の画像ファイルを作成できるようになりました。
（,と指定との間に余計なスペースは挟まないようにしてください）
仮素材等に便利だと思います。

例）
lsp 0,":c;>100,50,#FF8866",200,200

>幅,高さ,#色#色...と色を並べることで、横を均等分割してそれぞれその色で塗ります。
例）
lsp 0,":c;>100,50,#FFFFFF#888888",200,200

■lsp2subという命令が追加されました。
lspaddの減算ブレンディング版です。